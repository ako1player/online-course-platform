import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import AdminDashboardLayout from "~/components/layouts/admin-dashboard-layout";
import { api } from "~/utils/api";
import { Button, Group, Input, Text, TextInput, Title } from "@mantine/core";
import { IconCheck, IconEdit, IconLetterX } from "@tabler/icons-react";
import { useForm } from "@mantine/form";
import { useDisclosure } from "@mantine/hooks";

const Courses: NextPage = () => {

    const router = useRouter();
    const courseId = router.query.courseId as string;

    const updateCourse = api.course.updateCourse.useMutation();
    const [isEditingTitle, { open: setEditTitle, close: unsetEditTitle }] = useDisclosure(false);
    const updateTitleForm = useForm({
        initialValues: {
            title: '',
        },
    });

    const courseQuery = api.course.getCourseById.useQuery({
        courseId,
    }, {
        enabled: !!courseId,
        onSuccess(data) {
            updateTitleForm.setFieldValue("title", data?.title ?? "");
        }
    })


    return (
        <>
            <Head>
                <title>Manage Courses</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <AdminDashboardLayout>
                    <Group>
                        {isEditingTitle ? (
                            <form
                                onSubmit={updateTitleForm.onSubmit(async (values) => {
                                    await updateCourse.mutateAsync({
                                        ...values,
                                        courseId,
                                    });
                                    await courseQuery.refetch();
                                    unsetEditTitle();
                                })}
                            >
                                <Group>
                                    <TextInput
                                        required
                                        withAsterisk
                                        placeholder="title"
                                        {...updateTitleForm.getInputProps("title")}
                                    />
                                    <Button color="green" type="submit"><IconCheck /></Button>
                                    <Button color="gray" onClick={unsetEditTitle}><IconLetterX /></Button>
                                </Group>
                            </form>
                        ) : (
                            <>
                                <Title order={1}>{courseQuery.data?.title}</Title>
                                <Button color="gray" onClick={setEditTitle}>
                                    <IconEdit size="1rem" />
                                </Button>
                            </>
                        )}
                    </Group>
                </AdminDashboardLayout>
            </main>
        </>
    );
};

export default Courses;